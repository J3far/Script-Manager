<?xml version="1.0"?>
<Settings>
	<Alias>
		<currentDirectory>[cd]</currentDirectory>
		<profile>[profile]</profile>
		<downloadToDirectory>[dd]</downloadToDirectory>
		<restoreToDirectory>[rd]</restoreToDirectory>
		<awsSync>sync</awsSync>
		<awsList>ls</awsList>
		<awsCd>cd</awsCd>
		<awsCopy>cp</awsCopy>
	</Alias>
	
	<Default>
		<downloadToDirectory>C:\databases\backups</downloadToDirectory>
		<restoreToDirectory>C:\databases\backups</restoreToDirectory>
		<awsDirectory>s3://sqa-database-backup/CBB_SQA-SQL01/CBB_Database/SQA-SQL01</awsDirectory>
		<databaseName>QESTLab</databaseName>
		<restoreScriptName>restore.sql</restoreScriptName>		
	</Default>

	<AWS>
		<synCommand>aws s3 sync</synCommand>
		<listCommand>aws s3 ls</listCommand>
		<copyCommand>aws s3 cp</copyCommand>
		<awsRootDirectory>s3://</awsRootDirectory>
		<profile>--profile backup</profile>
	</AWS>

	<Commands>
		<Item>
			<Key>sync</Key>
			<Value>aws s3 sync</Value>
		</Item>
		
		<Item>
			<Key>cp</Key>
			<Value>aws s3 cp</Value>
		</Item>
		
		<Item>
			<Key>ls</Key>
			<Value>aws s3 ls</Value>
		</Item>		
	</Commands>
	
	<Restore>
		<sqlComment>--</sqlComment>
		<scriptHeader>
---------------------------------------------------------------------------------------------------------------
-- Header
---------------------------------------------------------------------------------------------------------------
set nocount on;

---------------------------------------------------------------------------------------------------------------
-- do some clean-up
---------------------------------------------------------------------------------------------------------------
if OBJECT_ID('tempdb..#configVars') is not null
	drop table #configVars;
go

if OBJECT_ID('tempdb..#databaseHeader') is not null
	drop table #databaseHeader;
go

if OBJECT_ID('tempdb..#downloadedFiles') is not null
	drop table #downloadedFiles;
go

---------------------------------------------------------------------------------------------------------------
-- Create some temp tables
---------------------------------------------------------------------------------------------------------------
create table #configVars(name nvarchar(100),value nvarchar(1000))

-- temp table for the backup headers
CREATE TABLE #databaseHeader
      (
      LogicalName nvarchar(128) NOT NULL,
      PhysicalName nvarchar(260) NOT NULL,
      Type char(1) NOT NULL,
      FileGroupName nvarchar(120) NULL,
      Size numeric(20, 0) NOT NULL,
      MaxSize numeric(20, 0) NOT NULL,
      FileID bigint NULL,
      CreateLSN numeric(25,0) NULL,
      DropLSN numeric(25,0) NULL,
      UniqueID uniqueidentifier NULL,
      ReadOnlyLSN numeric(25,0) NULL ,
      ReadWriteLSN numeric(25,0) NULL,
      BackupSizeInBytes bigint NULL,
      SourceBlockSize int NULL,
      FileGroupID int NULL,
      LogGroupGUID uniqueidentifier NULL,
      DifferentialBaseLSN numeric(25,0)NULL,
      DifferentialBaseGUID uniqueidentifier NULL,
      IsReadOnly bit NULL,
      IsPresent bit NULL,
      TDEThumbprint varbinary(32) NULL
 );

 create table #downloadedFiles(dir nvarchar(800),name nvarchar(200),dateCreated DateTime);

 ---------------------------------------------------------------------------------------------------------------
 -- config values
 ---------------------------------------------------------------------------------------------------------------
 insert into #configVars (name,value) values ('restoreToDir','$mdfAndLogLocations');
 insert into #configVars (name,value) values ('DatabaseName','$databaseName');
 insert into #configVars (name,value) values ('Verbose','True');

GO
		</scriptHeader>
		
		<scriptFooter>
---------------------------------------------------------------------------------------------------------------
 -- Restore
 ---------------------------------------------------------------------------------------------------------------
declare @disk nvarchar(1000) = (select top 1 dir+'\'+name from #downloadedFiles where name like '%.bak');

-- restore the header
---------------------------------------------------------------------------------------------------------------
insert into #databaseHeader
exec ('RESTORE FILELISTONLY  FROM  DISK = '''+@disk+''' WITH FILE = 1')

-- get current logial names from the header of teh back file.
insert into #configVars (name,value) select top 1 'logicalDataName',LogicalName from #databaseHeader where Type = 'D';
insert into #configVars (name,value) select top 1 'logicalLogName',LogicalName from #databaseHeader where Type = 'L';

-- get the targert logical names
---------------------------------------------------------------------------------------------------------------
declare @targetDatabaseName nvarchar(100) = (select top 1 value from #configVars where name = 'DatabaseName');
declare @logicalDataName nvarchar(100) = (select top 1 value from #configVars where name = 'logicalDataName');
declare @LogicalLogName nvarchar(100) = (select top 1 value from #configVars where name = 'logicalLogName');

-- get the target locations for the data and the log
---------------------------------------------------------------------------------------------------------------
declare @moveMdfTo nvarchar(100) = (select top 1 value+'\'+@targetDatabaseName+'.mdf' from #configVars where name = 'restoreToDir');
set @moveMdfTo = REPLACE(@moveMdfTo,'\\','\');
declare @moveLdfTo nvarchar(100) = (select top 1 value+'\'+@targetDatabaseName+'.ldf' from #configVars where name = 'restoreToDir');
set @moveLdfTo = REPLACE(@moveLdfTo,'\\','\');

declare @verbose bit = (select count(*) from #configVars where name = 'Verbose' and value ='True');

-- restore the back file first
---------------------------------------------------------------------------------------------------------------
if @verbose = 1 print 'Restoring '+@targetDatabaseName+'
Logical Data Location/Name : '+@moveMdfTo+'.
Logical Log Location/Name  : '+@moveLdfTo+'

'
RESTORE DATABASE @targetDatabaseName FROM  DISK = @disk WITH 
	MOVE @logicalDataName TO @moveMdfTo, 
	MOVE @LogicalLogName TO @moveLdfTo,
	NORECOVERY, 
	NOUNLOAD, 
	REPLACE, 
	STATS = 10
GO

-- remove the back file
delete from #downloadedFiles where name like '%.bak'

-- restore the log files
---------------------------------------------------------------------------------------------------------------
declare @disk nvarchar(1000);
declare @topFile nvarchar(200);
declare @targetDatabaseName nvarchar(100) = (select top 1 value from #configVars where name = 'DatabaseName');
declare @verbose bit = (select count(*) from #configVars where name = 'Verbose' and value ='True');

while (select count(*) from #downloadedFiles) > 0
begin
	select top 1 @disk = dir+'\'+name,@topFile = name from #downloadedFiles order by dateCreated asc;
	set @disk = REPLACE(@disk,'\\','\');

	if @verbose = 1 print 'Restoring '+@topFile+' ...';
	RESTORE LOG @targetDatabaseName FROM  DISK = @disk WITH FILE = 1, NORECOVERY, STATS = 10
	delete from #downloadedFiles where name = @topFile;
end
Go
    
-- bring the database online and rename the logical files
---------------------------------------------------------------------------------------------------------------
declare @targetDatabaseName nvarchar(100) = (select top 1 value from #configVars where name = 'DatabaseName');
declare @logicalDataName nvarchar(100) = (select top 1 value from #configVars where name = 'logicalDataName');
declare @LogicalLogName nvarchar(100) = (select top 1 value from #configVars where name = 'logicalLogName');
declare @verbose bit = (select count(*) from #configVars where name = 'Verbose' and value ='True');

RESTORE DATABASE @targetDatabaseName WITH RECOVERY;

if @verbose = 1 print 'Changeing database logical name from '+@logicalDataName+' to '+@targetDatabaseName+'_DATA';
exec ('alter database '+@targetDatabaseName+' modify file (Name = '''+@logicalDataName+''',Newname = '''+@targetDatabaseName+'_DATA'')');

if @verbose = 1 print 'Changeing database logical name from '+@logicalLogName+' to '+@targetDatabaseName+'_LOG';
exec ('alter database '+@targetDatabaseName+' modify file (Name = '''+@logicalLogName+''',Newname = '''+@targetDatabaseName+'_LOG'')');

 ---------------------------------------------------------------------------------------------------------------
 -- Done
 ---------------------------------------------------------------------------------------------------------------
 set nocount off;
		</scriptFooter>
		
	</Restore>
</Settings>